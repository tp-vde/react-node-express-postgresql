services:
  db:
    image: postgres:17.0-bookworm
    container_name: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user
      POSTGRES_DB: db
    ports:
      - 5432:5432
    networks:
      - bp-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    container_name: backend
    build: .
    environment:
      NODE_ENV: production
      # - DATABASE_URL=postgres://user:password@postgres:5432/mydb
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_NAME: postgres
    volumes:
      - ./config:/app/config
      - ./app-config.yaml:/app/app-config.yaml
    restart: always
    ports:
      - "3000:3000"
      - "7007:7007"
    networks:
      - bp-network
    depends_on:
      db:
        condition: service_healthy
    links:
      - db

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    restart: always
    ports:
      - 8082:80
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./servers.json:/pgadmin4/servers.json 
    depends_on:
      - db
    networks:
      - bp-network

# Volume pour persister les données de PostgreSQL et pour acceder à pgadmin4
volumes:
  postgres_data:
  pgadmin_data:

networks:
  bp-network:
    driver: bridge